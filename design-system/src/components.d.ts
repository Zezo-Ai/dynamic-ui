/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { AlertAction } from "./components/m-alert/m-alert-interface";
export namespace Components {
    interface MAlert {
        "actions": AlertAction[];
        "body": string;
        "header": string;
    }
    interface MButton {
        "disabled": boolean;
        "text": string;
        "type": 'submit' | 'reset' | 'button';
    }
    interface MInput {
        "disabled": boolean;
        "id": string;
        "label": string;
        "placeholder": string;
        "type": string;
        "value": string;
    }
    interface MText {
        "color": string;
    }
}
declare global {
    interface HTMLMAlertElement extends Components.MAlert, HTMLStencilElement {
    }
    var HTMLMAlertElement: {
        prototype: HTMLMAlertElement;
        new (): HTMLMAlertElement;
    };
    interface HTMLMButtonElement extends Components.MButton, HTMLStencilElement {
    }
    var HTMLMButtonElement: {
        prototype: HTMLMButtonElement;
        new (): HTMLMButtonElement;
    };
    interface HTMLMInputElement extends Components.MInput, HTMLStencilElement {
    }
    var HTMLMInputElement: {
        prototype: HTMLMInputElement;
        new (): HTMLMInputElement;
    };
    interface HTMLMTextElement extends Components.MText, HTMLStencilElement {
    }
    var HTMLMTextElement: {
        prototype: HTMLMTextElement;
        new (): HTMLMTextElement;
    };
    interface HTMLElementTagNameMap {
        "m-alert": HTMLMAlertElement;
        "m-button": HTMLMButtonElement;
        "m-input": HTMLMInputElement;
        "m-text": HTMLMTextElement;
    }
}
declare namespace LocalJSX {
    interface MAlert {
        "actions"?: AlertAction[];
        "body"?: string;
        "header"?: string;
        "onModActionClick"?: (event: CustomEvent<AlertAction>) => void;
    }
    interface MButton {
        "disabled"?: boolean;
        "onModButtonClick"?: (event: CustomEvent<any>) => void;
        "text"?: string;
        "type"?: 'submit' | 'reset' | 'button';
    }
    interface MInput {
        "disabled"?: boolean;
        "id"?: string;
        "label"?: string;
        "onModChange"?: (event: CustomEvent<string>) => void;
        "placeholder"?: string;
        "type"?: string;
        "value"?: string;
    }
    interface MText {
        "color"?: string;
    }
    interface IntrinsicElements {
        "m-alert": MAlert;
        "m-button": MButton;
        "m-input": MInput;
        "m-text": MText;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "m-alert": LocalJSX.MAlert & JSXBase.HTMLAttributes<HTMLMAlertElement>;
            "m-button": LocalJSX.MButton & JSXBase.HTMLAttributes<HTMLMButtonElement>;
            "m-input": LocalJSX.MInput & JSXBase.HTMLAttributes<HTMLMInputElement>;
            "m-text": LocalJSX.MText & JSXBase.HTMLAttributes<HTMLMTextElement>;
        }
    }
}
